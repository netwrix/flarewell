<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="_Skins_CSH_NPR_Skin" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="print" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" />
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>Agents</title>
        <link href="../../../Resources/Stylesheets/StealthbitsTemplate.css" rel="stylesheet" type="text/css" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" aria-label="title tab bar" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../Overview.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div id="mc-main-content" role="main" data-mc-content-body="True">
                                    <h1>Agents</h1>
                                    <p>To pull data on agent statues, configurations and group memberships, use the agentsRanked endpoint.</p>
                                    <h2>/api/agentsRanked</h2>
                                    <p>This call returns a list of agent details, including group and tracking template memberships.</p>
                                    <h3>POST Request</h3>
                                    <p>https://api/agentsRanked</p>
                                    <div class="codeSnippet">
                                        <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>{<br />&#160;&#160;&#160;&#160;"DeviceFilter":&#160;<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"GroupNames": [],<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"AgentDeviceIds": [],<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"AgentDisplayNames": [],<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"OnlineStatuses": [],<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"ExcludeProxiedDevices": false<br />&#160;&#160;&#160;&#160;},<br />&#160;&#160;&#160;&#160;"GetAgentGroupDetails": true,<br />&#160;&#160;&#160;&#160;"GetRelatedTemplates": true,<br />}</code></pre>
                                        </div>
                                    </div>
                                    <h4>Parameters</h4>
                                    <p class="Bold_Subheading">DeviceFilter</p>
                                    <ul>
                                        <li>
                                            <p>Specifies the agents to search for by id or group membership.</p>
                                        </li>
                                        <li>
                                            <p>Type – DeviceFilter</p>
                                        </li>
                                    </ul>
                                    <p class="Bold_Subheading">GetAgentGroupDetails</p>
                                    <ul>
                                        <li>
                                            <p>Specifies a value indicating whether to get agent group details.</p>
                                        </li>
                                        <li>
                                            <p>Type – Boolean</p>
                                        </li>
                                    </ul>
                                    <p class="Bold_Subheading">GetRelatedTemplates</p>
                                    <ul>
                                        <li>
                                            <p>Specifies a value indicating whether to get templates applied to the returned agents.</p>
                                        </li>
                                        <li>
                                            <p>Type – Boolean</p>
                                        </li>
                                    </ul>
                                    <h4>DeviceFilter</h4>
                                    <p class="Bold_Subheading">GroupNames</p>
                                    <ul>
                                        <li>
                                            <p>Filters by group IDs</p>
                                        </li>
                                        <li>
                                            <p>Type – Comma separated list of strings</p>
                                        </li>
                                        <li>
                                            <p>Example – ["A99", "A101", "W43"]</p>
                                        </li>
                                    </ul>
                                    <p class="Bold_Subheading">AgentDeviceIds</p>
                                    <ul>
                                        <li>
                                            <p>Filters by device IDs</p>
                                        </li>
                                        <li>
                                            <p>Type – Comma separated list of strings</p>
                                        </li>
                                        <li>
                                            <p>Example – ["1,1", "1,9"]</p>
                                        </li>
                                    </ul>
                                    <p class="Bold_Subheading">AgentDisplayNames</p>
                                    <ul>
                                        <li>
                                            <p>Filters by display names</p>
                                        </li>
                                        <li>
                                            <p>Type –: Comma separated list of strings</p>
                                        </li>
                                        <li>
                                            <p>Example – ["NWX-4GMJGX3", "Azure 365 Cloud Reporting Group"]</p>
                                        </li>
                                    </ul>
                                    <p class="Bold_Subheading">OnlineStatuses</p>
                                    <ul>
                                        <li>
                                            <p>Filters by online device status.</p>
                                        </li>
                                        <li>
                                            <p>Type – Comma separated list of strings</p>
                                        </li>
                                        <li>
                                            <p>Example – [ "Offline"]</p>
                                        </li>
                                    </ul>
                                    <p class="Bold_Subheading">ExcludeProxiedDevices</p>
                                    <ul>
                                        <li>
                                            <p>A value indicating whether to exclude proxied devices from the result set</p>
                                        </li>
                                        <li>
                                            <p>Type – Boolean</p>
                                        </li>
                                    </ul>
                                    <h3>Json Response Elements</h3>
                                    <ul>
                                        <li>
                                            <p>AgentGroups – A list of agent device group memberships</p>
                                        </li>
                                        <li>
                                            <p>GroupsLookup – A lookup list of group id/key to display name</p>
                                        </li>
                                        <li>
                                            <p>TemplatesLookup – A lookup list of template id/key to display name</p>
                                        </li>
                                        <li>
                                            <p>Agents – The list of agents matching the DeviceFilter</p>
                                        </li>
                                        <li>
                                            <p>AgentTemplates – A list of agent device templates</p>
                                        </li>
                                        <li>
                                            <p>Total – The number of agents matching the DeviceFilter</p>
                                        </li>
                                    </ul>
                                    <h3>Example PowerShell</h3>
                                    <p>The following PowerShell script will output the response to a CSV file with the following headers:</p>
                                    <ul>
                                        <li>
                                            <p>DeviceName</p>
                                        </li>
                                        <li>
                                            <p>FQDN</p>
                                        </li>
                                        <li>
                                            <p>Groups</p>
                                        </li>
                                        <li>
                                            <p>Templates</p>
                                        </li>
                                        <li>
                                            <p>HostType</p>
                                        </li>
                                        <li>
                                            <p>AgentType</p>
                                        </li>
                                        <li>
                                            <p>Registered</p>
                                        </li>
                                        <li>
                                            <p>Os</p>
                                        </li>
                                        <li>
                                            <p>IPv4</p>
                                        </li>
                                        <li>
                                            <p>OnlineStatus</p>
                                        </li>
                                    </ul>
                                    <p>To be able to trust self-signed certificates, each call to Invoke-RestMethod is made with the -SkipCertificateCheck argument. This requires PowerShell 7.</p>
                                    <div class="codeSnippet">
                                        <div style="mc-code-lang: PowerShell;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #969896; "># Declare script parameters and their default values. Override these defaults from the command line e.g. -HostUrl http://myliveserver/api</span><br /><span style="color: #a71d5d; font-weight: bold; ">param</span>([string]<span style="font-weight: bold; ">$HostUrl</span> = <span style="color: #df5000; ">"https://localhost/api"</span>, [string]<span style="font-weight: bold; ">$AdminUser</span> = <span style="color: #df5000; ">"admin"</span>, [string]<span style="font-weight: bold; ">$AdminPwd</span> = <span style="color: #df5000; ">"password"</span>)<br /><span style="color: #969896; "># This script is intended to read and display agent details, including group and tracking templates</span><br /><span style="color: #a71d5d; font-weight: bold; ">Function</span> GetAdminUserSession() {<br />&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$uri</span> = <span style="color: #df5000; ">"$HostUrl/auth/credentials"</span><br />&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$params</span> = <span style="color: #df5000; ">"username=$AdminUser&amp;password=$AdminPwd&amp;format=json"</span><br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">"Acquiring User Session: $AdminUser ("</span><span style="font-weight: bold; ">$uri</span>.replace(<span style="color: #df5000; ">"=$AdminPwd"</span>, <span style="color: #df5000; ">"=******"</span>)<span style="color: #df5000; ">")"</span><br />&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$result</span> = <span style="color: #a71d5d; font-weight: bold; ">Invoke-RestMethod</span> -Method Post -Uri <span style="font-weight: bold; ">$uri</span> -Headers @{ Accept = <span style="color: #df5000; ">'application/json'</span> } -SkipCertificateCheck -SessionVariable myWebSession -Body <span style="font-weight: bold; ">$params</span><br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">If</span> (<span style="font-weight: bold; ">$null</span> <span style="color: #795da3; ">-ne</span> <span style="font-weight: bold; ">$result</span>.UserId <span style="color: #795da3; ">-and</span> <span style="font-weight: bold; ">$null</span> <span style="color: #795da3; ">-ne</span> <span style="font-weight: bold; ">$result</span>.SessionId) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">"Acquired User Session: $AdminUser ( User Id:"</span><span style="font-weight: bold; ">$result</span>.UserId<span style="color: #df5000; ">", Session Id:"</span><span style="font-weight: bold; ">$result</span>.SessionId<span style="color: #df5000; ">")"</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">Return</span> <span style="font-weight: bold; ">$myWebSession</span><br />&#160;&#160;&#160;&#160;}<br />}<br /><span style="color: #a71d5d; font-weight: bold; ">Function</span> lookup(<span style="font-weight: bold; ">$agentPropertyList</span>, <span style="font-weight: bold; ">$agentDeviceId</span>) {<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">for</span> (<span style="font-weight: bold; ">$i</span> = <span style="color: #333333; ">0</span>; <span style="font-weight: bold; ">$i</span> <span style="color: #795da3; ">-lt</span> <span style="font-weight: bold; ">$agentPropertyList</span>.Length; <span style="font-weight: bold; ">$i</span>++) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$element</span> = <span style="font-weight: bold; ">$agentPropertyList</span>[<span style="font-weight: bold; ">$i</span>]<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$element</span>.AgentDevice.AgentId <span style="color: #795da3; ">-eq</span> <span style="font-weight: bold; ">$agentDeviceId</span>.AgentId <span style="color: #795da3; ">-and</span> <span style="font-weight: bold; ">$element</span>.AgentDevice.DeviceId <span style="color: #795da3; ">-eq</span> <span style="font-weight: bold; ">$agentDeviceId</span>.DeviceId) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$element</span>;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;}<br />}<br /><span style="color: #a71d5d; font-weight: bold; ">Function</span> lookupGrpNames(<span style="font-weight: bold; ">$grpLookup</span>, <span style="font-weight: bold; ">$grpIds</span>) {<br />&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$grpNames</span> = <span style="color: #a71d5d; font-weight: bold; ">New-Object</span> <span style="color: #df5000; ">"System.Collections.Generic.List[string]"</span><br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">for</span> (<span style="font-weight: bold; ">$i</span> = <span style="color: #333333; ">0</span>; <span style="font-weight: bold; ">$i</span> <span style="color: #795da3; ">-lt</span> <span style="font-weight: bold; ">$grpIds</span>.Length; <span style="font-weight: bold; ">$i</span>++) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$grpId</span> = <span style="font-weight: bold; ">$grpIds</span>[<span style="font-weight: bold; ">$i</span>]<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">for</span> (<span style="font-weight: bold; ">$j</span> = <span style="color: #333333; ">0</span>; <span style="font-weight: bold; ">$j</span> <span style="color: #795da3; ">-lt</span> <span style="font-weight: bold; ">$grpLookup</span>.Length; <span style="font-weight: bold; ">$j</span>++) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$lookup</span> = <span style="font-weight: bold; ">$grpLookup</span>[<span style="font-weight: bold; ">$j</span>]<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$lookup</span>.Key <span style="color: #795da3; ">-eq</span> <span style="font-weight: bold; ">$grpId</span>) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$grpNames</span>.Add(<span style="font-weight: bold; ">$lookup</span>.Value)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$grpNames</span>;<br />}<br /><span style="color: #a71d5d; font-weight: bold; ">Function</span> lookupPCNames(<span style="font-weight: bold; ">$agentPropertyList</span>, <span style="font-weight: bold; ">$agentDeviceId</span>) {<br />&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$list</span> = <span style="color: #a71d5d; font-weight: bold; ">New-Object</span> System.Collections.Generic.List[System.String]<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">for</span> (<span style="font-weight: bold; ">$i</span> = <span style="color: #333333; ">0</span>; <span style="font-weight: bold; ">$i</span> <span style="color: #795da3; ">-lt</span> <span style="font-weight: bold; ">$agentPropertyList</span>.Length; <span style="font-weight: bold; ">$i</span>++) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$element</span> = <span style="font-weight: bold; ">$agentPropertyList</span>[<span style="font-weight: bold; ">$i</span>]<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$element</span>.AgentDevice.AgentId <span style="color: #795da3; ">-eq</span> <span style="font-weight: bold; ">$agentDeviceId</span>.AgentId <span style="color: #795da3; ">-and</span> <span style="font-weight: bold; ">$element</span>.AgentDevice.DeviceId <span style="color: #795da3; ">-eq</span> <span style="font-weight: bold; ">$agentDeviceId</span>.DeviceId) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$list</span>.Add(<span style="font-weight: bold; ">$element</span>.Name)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$list</span><br />}<br /><span style="color: #a71d5d; font-weight: bold; ">Try</span> {<br />&#160;&#160;&#160;&#160;<span style="color: #969896; "># Set up a session variable for the Admin user which can be used on subsequent requests</span><br />&#160;&#160;&#160;&#160;<span style="color: #969896; "># Use the session in future calls</span><br />&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$myWebSession</span> = GetAdminUserSession<br />&#160;&#160;&#160;&#160;<span style="color: #969896; "># csv output file name</span><br />&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$outfile</span> = <span style="color: #df5000; ">"agentsRanked-"</span> + (<span style="color: #a71d5d; font-weight: bold; ">Get-Date</span>).ToString(<span style="color: #df5000; ">"yyyyMMdd-hhmmss"</span>) + <span style="color: #df5000; ">".csv"</span><br /><br />&#160;&#160;&#160;&#160;<span style="color: #969896; "># device filter to be applied</span><br />&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$deviceFilter</span> =<br />&#160;&#160;&#160;&#160;<span style="color: #df5000; ">"{</span><br />`<span style="color: #df5000; ">"DeviceFilter`"</span>: {<br />`<span style="color: #df5000; ">"GroupNames`"</span>: [],<br />`<span style="color: #df5000; ">"AgentDeviceIds`"</span>: [],<br />`<span style="color: #df5000; ">"AgentDisplayNames`"</span>: [],<br />`<span style="color: #df5000; ">"ExcludeProxiedDevices`"</span>: false,<br />`<span style="color: #df5000; ">"OnlineStatuses`"</span>: [`<span style="color: #df5000; ">"Offline`"</span>]<br />},<br />`<span style="color: #df5000; ">"GetAgentGroupDetails`"</span>: true,<br />`<span style="color: #df5000; ">"GetRelatedTemplates`"</span>: true<br />}<span style="color: #df5000; ">"</span><br />&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$uri</span> = <span style="color: #df5000; ">"$HostUrl/agentsRanked"</span><br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">Write-Host</span>(<span style="color: #df5000; ">"Reading Agents: ( $uri ) writing to ( $outfile )"</span>)<br />&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$result</span> = <span style="color: #a71d5d; font-weight: bold; ">Invoke-RestMethod</span> -Method Post -ContentType application/json -Uri <span style="font-weight: bold; ">$uri</span> -SkipCertificateCheck -Headers <span style="font-weight: bold; ">$headers</span> -Body <span style="font-weight: bold; ">$deviceFilter</span> -WebSession <span style="font-weight: bold; ">$myWebSession</span><br />&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$agents</span> = @()<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">foreach</span> (<span style="font-weight: bold; ">$item</span> <span style="color: #a71d5d; font-weight: bold; ">in</span> <span style="font-weight: bold; ">$result</span>.Agents) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; "># find groups and templates from other parts of the response</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$groups</span> = lookup <span style="font-weight: bold; ">$result</span>.AgentGroups <span style="font-weight: bold; ">$item</span>.AgentDevice<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$groupNames</span> = lookupGrpNames <span style="font-weight: bold; ">$result</span>.GroupsLookup <span style="font-weight: bold; ">$groups</span>.MemberOf<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$groupsText</span> = <span style="color: #df5000; ">""</span>;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$null</span> <span style="color: #795da3; ">-ne</span> <span style="font-weight: bold; ">$groups</span>) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$groupsText</span> = <span style="font-weight: bold; ">$groupNames</span> -join <span style="color: #df5000; ">","</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$templates</span> = lookup <span style="font-weight: bold; ">$result</span>.AgentTemplates <span style="font-weight: bold; ">$item</span>.AgentDevice<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$templatesText</span> = <span style="color: #df5000; ">""</span>;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$null</span> <span style="color: #795da3; ">-ne</span> <span style="font-weight: bold; ">$templates</span>) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$templatesText</span> = <span style="font-weight: bold; ">$templates</span>.ConfigTemplates -join <span style="color: #df5000; ">","</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; "># add custom object to array so CSV format works as expected</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$agents</span> += [PSCustomObject]@{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DeviceName&#160;&#160;&#160;= <span style="font-weight: bold; ">$item</span>.DeviceName<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FQDN&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;= <span style="font-weight: bold; ">$item</span>.FullyQualifiedDomainName<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Groups&#160;&#160;&#160;&#160;&#160;&#160;&#160;= <span style="font-weight: bold; ">$groupsText</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Templates&#160;&#160;&#160;&#160;= <span style="font-weight: bold; ">$templatesText</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;HostType&#160;&#160;&#160;&#160;&#160;= <span style="font-weight: bold; ">$item</span>.HostType<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;AgentType&#160;&#160;&#160;&#160;= <span style="font-weight: bold; ">$item</span>.AgentType<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Registered&#160;&#160;&#160;= <span style="font-weight: bold; ">$item</span>.Registered<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Os&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;= <span style="font-weight: bold; ">$item</span>.Os<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;IPv4&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;= <span style="font-weight: bold; ">$item</span>.IPv4<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;OnlineStatus = <span style="font-weight: bold; ">$item</span>.OnlineStatus<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;}<br /><br />&#160;&#160;&#160;&#160;<span style="color: #969896; "># write out to a csv</span><br />&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$agents</span> | <span style="color: #a71d5d; font-weight: bold; ">Export-Csv</span> -Path <span style="font-weight: bold; ">$outfile</span> -Delimiter <span style="color: #df5000; ">","</span> -Encoding UTF8 -NoTypeInformation<br /><br />&#160;&#160;&#160;&#160;<span style="color: #969896; "># to write out the raw json of the response</span><br />&#160;&#160;&#160;&#160;<span style="color: #969896; "># $jsonOutfile = "agentsRanked-" + (Get-Date).ToString("yyyyMMdd-hhmmss") + ".json"</span><br />&#160;&#160;&#160;&#160;<span style="color: #969896; "># $result | ConvertTo-Json -depth 100 | Out-File $jsonOutfile</span><br />}<br /><span style="color: #a71d5d; font-weight: bold; ">Catch</span> [Net.WebException] {<br />&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$resp</span> = <span style="font-weight: bold; ">$_</span>.Exception.Response;<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">If</span> ( <span style="font-weight: bold; ">$resp</span>.StatusCode <span style="color: #795da3; ">-eq</span> [Net.HttpStatusCode]::BadRequest ) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="font-weight: bold; ">$result</span> = (<span style="color: #a71d5d; font-weight: bold; ">New-Object</span> IO.StreamReader(<span style="font-weight: bold; ">$resp</span>.GetResponseStream())).ReadToEnd() | <span style="color: #a71d5d; font-weight: bold; ">ConvertFrom-Json</span>;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; "># Handle errors</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">Write-Output</span> <span style="font-weight: bold; ">$_</span>.Exception<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">Else</span> {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #969896; "># Handle errors</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #a71d5d; font-weight: bold; ">Write-Output</span> <span style="font-weight: bold; ">$_</span>.Exception<br />&#160;&#160;&#160;&#160;}<br />}</code></pre>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>