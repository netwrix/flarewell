<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_Stealthbits_WebsiteSkin" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../../../" data-mc-has-content-body="True" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>.NET Script Actions</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/StealthbitsTemplate.css" rel="stylesheet" type="text/css" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="complementary" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" aria-label="Main navigation and search" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../../Overview.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="nocontent">
                                        <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                        </div>
                                    </div>
                                    <p>
                                        <script type="text/javascript" src="../../../../Resources/zzJavaScript/plugins.min.js">
                                        </script>
                                    </p>
                                    <div role="main" id="mc-main-content">
                                        <h1>.NET Script Actions</h1>
                                        <p>A Visual Basic or C# script can be written and assigned to a policy by users or a <span class="mc-variable Netwrix.Company variable">Netwrix</span> Engineer via engaging <span class="mc-variable Netwrix.Company variable">Netwrix</span> Professional Services. The script will be invoked by the Enterprise Manager for an enabled policy. </p>
                                        <p>Follow the steps to add a .NET Script action to a policy/template.</p>
                                        <p class="p_5" style="text-align: center;">
                                            <img src="../../../../Resources/Images/ThreatPrevention/Policies/ActionsConfigurationsArea.png" style="width: 640px;height: 192px;" title="Actions tab - Actions Configurations area" alt="Actions tab - Actions Configurations area" />
                                        </p>
                                        <p class="Step-Reset" data-mc-autonum="&lt;b&gt;Step 1 – &lt;/b&gt;"><span class="autonumber"><span class="Step"><b>Step 1 – </b></span></span>On a policy or template <b>Actions</b> tab, click <b>Add</b> (+) to open the Add Action window. </p>
                                        <p class="Step" data-mc-autonum="&lt;b&gt;Step 2 – &lt;/b&gt;"><span class="autonumber"><span class="Step"><b>Step 2 – </b></span></span>In the left pane, select the radio button for <b>.NET Script</b>.</p>
                                        <p style="text-align: center;">
                                            <img src="../../../../Resources/Images/ThreatPrevention/Policies/AddActionWindowforNetScript.png" style="width: 500px;height: 545px;" title="Policy &gt; Actions tab &gt; Add Actions window for .Net Script" alt="Policy &gt; Actions tab &gt; Add Actions window for .Net Script" />
                                        </p>
                                        <p class="Step" data-mc-autonum="&lt;b&gt;Step 3 – &lt;/b&gt;"><span class="autonumber"><span class="Step"><b>Step 3 – </b></span></span>Configure the .NET Script action:</p>
                                        <ul>
                                            <li>Name – Provide a unique, descriptive name for this .NET Script action</li>
                                            <li>Check the box for <b>Enabled</b> to allow the policy to launch the script</li>
                                            <li>Description – Provide a clear and detailed description for this .NET Script action. This is optional but recommended.</li>
                                            <li>Select the radio button for the script language being used:<ul><li>Visual Basic</li><li>C#</li></ul></li>
                                            <li>Click <b>Edit…</b> to open the <span class="mc-variable SI.Product variable">Threat Prevention</span> Script Editor window and provide the script</li>
                                        </ul>
                                        <p class="p_5" style="text-align: center;">
                                            <img src="../../../../Resources/Images/ThreatPrevention/Policies/ScriptEditorforNet.png" style="width: 696px;height: 478px;" title="Script Editor for .Net Scripts" alt="Script Editor for .Net Scripts" />
                                        </p>
                                        <p class="Step" data-mc-autonum="&lt;b&gt;Step 4 – &lt;/b&gt;"><span class="autonumber"><span class="Step"><b>Step 4 – </b></span></span>Create or copy/paste a custom script in the <span class="mc-variable SI.Product variable">Threat Prevention</span> Script Editor. See the <a href="#_StealthINTERCEPT_Script_Editor" title="Threat Prevention Script Editor Tools" alt="Threat Prevention Script Editor Tools" target="_parent" class="MCXref xref">Threat Prevention Script Editor Tools</a> topic for additional information, i.e. Run for testing and Encrypt functionality. See the <a href="#_Default_Visual_Basic" target="_parent" title="Default Visual Basic Script" alt="Default Visual Basic Script" class="MCXref xref">Default Visual Basic Script</a> and <a href="#_Default_C#_Script" target="_parent" title="Default C# Script" alt="Default C# Script" class="MCXref xref">Default C# Script</a> topics for default custom scripts. Save and close.</p>
                                        <p class="Step" data-mc-autonum="&lt;b&gt;Step 5 – &lt;/b&gt;"><span class="autonumber"><span class="Step"><b>Step 5 – </b></span></span>On the Add Action window, the new script is displayed in the <b>Script Preview</b> section. Check the <b>Enable compiler error logging</b> checkbox to enable <span class="mc-variable SI.Product variable">Threat Prevention</span> to log information about the compiling of scripts. </p>
                                        <p class="Step" data-mc-autonum="&lt;b&gt;Step 6 – &lt;/b&gt;"><span class="autonumber"><span class="Step"><b>Step 6 – </b></span></span>Click Save to close the Add Action window and apply changes. </p>
                                        <p class="p_5" style="text-align: center;">
                                            <img src="../../../../Resources/Images/ThreatPrevention/Policies/NetScriptAction.png" style="width: 727px;height: 510px;" title="Actions tab - .Net Script Action Created" alt="Actions tab - .Net Script Action Created" />
                                        </p>
                                        <p>The Actions tab now displays the configured settings for the specified .NET Script action. The action configuration can be directly edited through this display as well.</p>
                                        <h2><a name="_StealthINTERCEPT_Script_Editor"></a>Threat Prevention Script Editor Tools</h2>
                                        <p>On the Add Action window, the <b>Edit...</b> button opens the <span class="mc-variable SI.Product variable">Threat Prevention</span> Script Editor. The top bar includes the Tools dropdown menu that provides several useful tools.</p>
                                        <p class="p_5" style="text-align: center;">
                                            <img src="../../../../Resources/Images/ThreatPrevention/Policies/ToolsMenu.png" style="width: 358px;height: 209px;" title="Tools Menu in the Script Editor" alt="Tools Menu in the Script Editor" />
                                        </p>
                                        <p>The Tools menu contains the following options:</p>
                                        <ul>
                                            <li>Assembly Manager – Applies to Visual Basic and C# scripts only. It displays a list of assemblies that support exposing <span class="mc-variable SI.Product variable">Threat Prevention</span> data in the VB or C# runtime environments.</li>
                                            <li>Compile (Ctrl+F6) – Applies to Visual Basic and C# scripts only. It compiles the script to find and fix syntax errors.</li>
                                            <li>Run (F5) – Executes the script on the machine where the <span class="mc-variable SI.Product_2 variable">Administration Console</span> is installed. It  launches the script from the <span class="mc-variable SI.Product_2 variable">Administration Console</span>, allowing the user to test the script. When running a .NET Script action, there are no prerequisites. </li>
                                            <li>Reset to Default Script – Replaces the existing script with the default script that is shipped with <span class="mc-variable SI.Product variable">Threat Prevention</span>.</li>
                                            <li>Encrypt – Encrypts selected portions of the script to an encrypted string with a decrypt command for run time. See note below explaining why only a plain text string, information in thae script between quote marks (“), should be encrypted.</li>
                                        </ul>
                                        <p class="Remember" data-mc-autonum="&lt;span style=&quot;color: #fb8000;&quot; class=&quot;mcFormatColor&quot;&gt;&lt;i&gt;Remember, &lt;/i&gt;&lt;/span&gt;"><span class="autonumber"><span class="Remember"><span style="color: #fb8000;" class="mcFormatColor"><i>Remember, </i></span></span></span>when testing a script in the Script Editor, the <b>Run</b> option executes the script in the context of the user logged into the <span class="mc-variable SI.Product_2 variable">Administration Console</span>. In production, when this script is run as part of a policy, it will run in the context of the account configured for the Enterprise Manager. If the script depends on specific user/account rights, then that should be taken into account when using the <b>Run</b> option to test the script.</p>
                                        <p class="Caution" data-mc-autonum="&lt;span style=&quot;color: #da0000;&quot; class=&quot;mcFormatColor&quot;&gt;&lt;b&gt;CAUTION: &lt;/b&gt;&lt;/span&gt;"><span class="autonumber"><span class="Caution"><span style="color: #da0000;" class="mcFormatColor"><b>CAUTION: </b></span></span></span>The Tools &gt; Encrypt option is used to obfuscate plain text strings, e.g. credentials, within the script. Encrypting functions or other commands result in the script not working. Only a literal string should be encrypted, between the quote marks (“). The quote marks themselves should not be included in the encryption.</p>
                                        <h2><a name="_Default_Visual_Basic"></a>Default Visual Basic Script</h2>
                                        <p>The following Visual Basic script is configured as a default action. It will either create the c:\nveventdata.txt file or append the event data to it.</p>
                                        <div class="codeSnippet">
                                            <div style="mc-code-lang: VB;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #a71d5d; ">Imports</span> Microsoft.VisualBasic<br /><span style="color: #a71d5d; ">Imports</span> System<br /><span style="color: #a71d5d; ">Imports</span> System.Collections<br /><span style="color: #a71d5d; ">Imports</span> System.IO<br /><span style="color: #a71d5d; ">Imports</span> System.<span style="color: #a71d5d; ">Text</span><br /><span style="color: #a71d5d; ">Imports</span> SI.Common.Messages<br /><span style="color: #a71d5d; ">Imports</span> SI.SIMonitor.ConsoleMessages.Helpers<br />&#160;<br /><span style="color: #a71d5d; ">Namespace</span> ScriptNamespace<br />&#160;<br /><span style="color: #a71d5d; ">Public</span> <span style="color: #a71d5d; ">Class</span> ScriptClass<br />&#160;<br /><span style="color: #a71d5d; ">Private</span> helper <span style="color: #a71d5d; ">As</span> EventConsumerHelper = <span style="color: #63a35c; ">Nothing</span><br />&#160;<br /><span style="color: #969896; "><span style="color: #969896; ">'''</span>Required class constructor</span><br /><span style="color: #a71d5d; ">Public</span> <span style="color: #a71d5d; ">Sub</span> <span style="color: #0086b3; ">New</span>(<span style="color: #a71d5d; ">ByVal</span> ecHelper <span style="color: #a71d5d; ">As</span> EventConsumerHelper)<br /><span style="color: #63a35c; ">MyBase</span>.<span style="color: #0086b3; ">New</span><br /><span style="color: #63a35c; ">Me</span>.helper = ecHelper<br /><span style="color: #a71d5d; ">End</span> <span style="color: #a71d5d; ">Sub</span><br />&#160;<br /><span style="color: #969896; ">'Public Read-Only Properties of EventConsumerHelper are as follows:</span><br /><span style="color: #969896; ">'&#160;&#160;public DateTime TimeLogged</span><br /><span style="color: #969896; ">'&#160;&#160;public DateTime TimeLoggedUtc</span><br /><span style="color: #969896; ">'&#160;&#160;public string EventSourceType</span><br /><span style="color: #969896; ">'&#160;&#160;public string EventSourceName</span><br /><span style="color: #969896; ">'&#160;&#160;public string SettingName</span><br /><span style="color: #969896; ">'&#160;&#160;public string EventName</span><br /><span style="color: #969896; ">'&#160;&#160;public string DN</span><br /><span style="color: #969896; ">'&#160;&#160;public string ClassName</span><br /><span style="color: #969896; ">'&#160;&#160;public string Perpetrator</span><br /><span style="color: #969896; ">'&#160;&#160;public string OriginatingServer</span><br /><span style="color: #969896; ">'&#160;&#160;public string OriginatingClient</span><br /><span style="color: #969896; ">'&#160;&#160;public string Success</span><br /><span style="color: #969896; ">'&#160;&#160;public string Status</span><br /><span style="color: #969896; ">'&#160;&#160;public Hashtable NewAttributes</span><br /><span style="color: #969896; ">'&#160;&#160;public Hashtable OldAttributes</span><br /><span style="color: #969896; ">'&#160;&#160;public Hashtable Operations</span><br /><span style="color: #969896; ">'&#160;&#160;public string BlockedEvent</span><br /><span style="color: #969896; ">'&#160;&#160;public string EventsCount</span><br /><span style="color: #969896; ">'&#160;&#160;public string OriginatingClientProtocol</span><br /><span style="color: #969896; ">'&#160;&#160;public string FromHost</span><br /><span style="color: #969896; ">'&#160;&#160;public string FromHostIp</span><br /><span style="color: #969896; ">'&#160;&#160;public string ToHost</span><br /><span style="color: #969896; ">'&#160;&#160;public string ToHostIp</span><br /><span style="color: #969896; ">'&#160;&#160;public string LoginType</span><br /><span style="color: #969896; ">'&#160;&#160;public string AffectedObjectSid</span><br /><span style="color: #969896; ">'&#160;&#160;public string OriginatingServerIp</span><br /><span style="color: #969896; ">'&#160;&#160;public string PerpetratorName</span><br /><span style="color: #969896; ">'&#160;&#160;public string PerpetratorSid</span><br /><span style="color: #969896; ">'&#160;&#160;public string EventNameTranslated</span><br /><span style="color: #969896; ">'Enter code in method ScriptMain below:</span><br /><span style="color: #969896; ">' new attributes</span><br /><span style="color: #969896; ">' old attributes</span><br /><span style="color: #969896; ">' operations</span><br /><span style="color: #a71d5d; ">Public</span> <span style="color: #a71d5d; ">Overridable</span> <span style="color: #a71d5d; ">Sub</span> ScriptMain()<br />&#160;<br /><span style="color: #a71d5d; ">Dim</span> sw <span style="color: #a71d5d; ">As</span> System.IO.StreamWriter = <span style="color: #63a35c; ">Nothing</span><br /><span style="color: #a71d5d; ">Try</span>&#160;<br />sw = <span style="color: #0086b3; ">New</span> System.IO.StreamWriter(<span style="color: #df5000; ">"c:\si_eventdata.txt"</span>, <span style="color: #63a35c; ">true</span>)<br />sw.WriteLine(<span style="color: #df5000; ">"==========================================="</span>)<br />sw.WriteLine((<span style="color: #df5000; ">"TimeLogged:&#160;&#160;"</span> + helper.TimeLogged.ToString))<br />sw.WriteLine((<span style="color: #df5000; ">"TimeLoggedUtc:&#160;&#160;"</span> + helper.TimeLoggedUtc.ToString))<br />sw.WriteLine((<span style="color: #df5000; ">"EventSourceType: "</span> + helper.EventSourceType))<br />sw.WriteLine((<span style="color: #df5000; ">"EventSourceName: "</span> + helper.EventSourceName))<br />sw.WriteLine((<span style="color: #df5000; ">"SettingName: "</span> + helper.SettingName))<br />sw.WriteLine((<span style="color: #df5000; ">"EventName: "</span> + helper.EventName))<br />sw.WriteLine((<span style="color: #df5000; ">"DN:&#160;&#160;"</span> + helper.DN.ToString))<br />sw.WriteLine((<span style="color: #df5000; ">"ClassName: "</span> + helper.ClassName))<br />sw.WriteLine((<span style="color: #df5000; ">"Perpetrator: "</span> + helper.Perpetrator))<br />sw.WriteLine((<span style="color: #df5000; ">"OriginatingServer: "</span> + helper.OriginatingServer))<br />sw.WriteLine((<span style="color: #df5000; ">"OriginatingClient: "</span> + helper.OriginatingClient))<br />sw.WriteLine((<span style="color: #df5000; ">"Success: "</span> + helper.Success.ToString))<br />sw.WriteLine((<span style="color: #df5000; ">"Status: "</span> + helper.Status))<br />sw.WriteLine((<span style="color: #df5000; ">"BlockedEvent: "</span> + helper.BlockedEvent.ToString))<br />sw.WriteLine((<span style="color: #df5000; ">"EventsCount: "</span> + helper.EventsCount.ToString))<br />sw.WriteLine((<span style="color: #df5000; ">"OriginatingClientProtocol: "</span> + helper.OriginatingClientProtocol))<br />sw.WriteLine((<span style="color: #df5000; ">"FromHost: "</span> + helper.FromHost))<br />sw.WriteLine((<span style="color: #df5000; ">"FromHostIp: "</span> + helper.FromHostIp))<br />sw.WriteLine((<span style="color: #df5000; ">"ToHost: "</span> + helper.ToHost))<br />sw.WriteLine((<span style="color: #df5000; ">"ToHostIp: "</span> + helper.ToHostIp))<br />sw.WriteLine((<span style="color: #df5000; ">"LoginType: "</span> + helper.LoginType.ToString))<br />sw.WriteLine((<span style="color: #df5000; ">"AffectedObjectSid: "</span> + helper.AffectedObjectSid))<br />sw.WriteLine((<span style="color: #df5000; ">"OriginatingServerIp: "</span> + helper.OriginatingServerIp))<br />sw.WriteLine((<span style="color: #df5000; ">"PerpetratorName: "</span> + helper.PerpetratorName))<br />sw.WriteLine((<span style="color: #df5000; ">"PerpetratorSid: "</span> + helper.PerpetratorSid))<br />sw.WriteLine((<span style="color: #df5000; ">"EventNameTranslated: "</span> + helper.EventNameTranslated))<br />&#160;<br />sw.WriteLine(<span style="color: #df5000; ">""</span>)<br />sw.WriteLine(<span style="color: #df5000; ">"New Attributes:"</span>)<br />sw.WriteLine(<span style="color: #df5000; ">"--------------"</span>)<br />sw.WriteLine(<span style="color: #63a35c; ">Me</span>.GetAttributes(helper.NewAttributes))<br />&#160;<br />sw.WriteLine(<span style="color: #df5000; ">""</span>)<br />sw.WriteLine(<span style="color: #df5000; ">"Old Attributes:"</span>)<br />sw.WriteLine(<span style="color: #df5000; ">"--------------"</span>)<br />sw.WriteLine(<span style="color: #63a35c; ">Me</span>.GetAttributes(helper.OldAttributes))<br />&#160;<br />sw.WriteLine(<span style="color: #df5000; ">""</span>)<br />sw.WriteLine(<span style="color: #df5000; ">"Operations:"</span>)<br />sw.WriteLine(<span style="color: #df5000; ">"--------------"</span>)<br />sw.WriteLine(<span style="color: #63a35c; ">Me</span>.GetAttributes(helper.Operations))<br />sw.WriteLine(<span style="color: #df5000; ">"==========================================="</span>)<br />sw.WriteLine(<span style="color: #df5000; ">""</span>)<br />sw.Flush<br /><span style="color: #a71d5d; ">Catch</span> e <span style="color: #a71d5d; ">As</span> System.Exception<br /><span style="color: #a71d5d; ">Finally</span><br />sw.Close<br /><span style="color: #a71d5d; ">End</span> <span style="color: #a71d5d; ">Try</span><br /><span style="color: #a71d5d; ">End</span> <span style="color: #a71d5d; ">Sub</span><br />&#160;<br /><span style="color: #a71d5d; ">Private</span> <span style="color: #a71d5d; ">Function</span> GetAttributes(<span style="color: #a71d5d; ">ByVal</span> attributes <span style="color: #a71d5d; ">As</span> System.Collections.Hashtable) <span style="color: #a71d5d; ">As</span> <span style="color: #a71d5d; ">String</span><br /><span style="color: #a71d5d; ">Dim</span> sb <span style="color: #a71d5d; ">As</span> System.<span style="color: #a71d5d; ">Text</span>.StringBuilder = <span style="color: #0086b3; ">New</span> System.<span style="color: #a71d5d; ">Text</span>.StringBuilder()<br /><span style="color: #a71d5d; ">Dim</span> enumerator <span style="color: #a71d5d; ">As</span> System.Collections.IEnumerator = attributes.GetEnumerator<br />&#160;<br /><span style="color: #a71d5d; ">Do</span> <span style="color: #a71d5d; ">While</span> enumerator.MoveNext<br /><span style="color: #a71d5d; ">Dim</span> attrName <span style="color: #a71d5d; ">As</span> <span style="color: #a71d5d; ">String</span> = <span style="color: #63a35c; ">Nothing</span><br /><span style="color: #a71d5d; ">Dim</span> de <span style="color: #a71d5d; ">As</span> System.Collections.DictionaryEntry = <span style="color: #a71d5d; ">CType</span>(enumerator.Current,System.Collections.DictionaryEntry)<br /><span style="color: #a71d5d; ">If</span> (de.<span style="color: #a71d5d; ">Key</span> &lt;&gt; <span style="color: #63a35c; ">Nothing</span>) <span style="color: #a71d5d; ">Then</span><br />attrName = de.<span style="color: #a71d5d; ">Key</span>.ToString<br /><span style="color: #a71d5d; ">Else</span><br />attrName = <span style="color: #df5000; ">""</span><br /><span style="color: #a71d5d; ">End</span> <span style="color: #a71d5d; ">If</span><br />sb.Append(attrName)<br />sb.Append(<span style="color: #df5000; ">": "</span>)<br /><span style="color: #a71d5d; ">If</span> <span style="color: #0086b3; ">Not</span> (de.Value <span style="color: #0086b3; ">Is</span> <span style="color: #63a35c; ">Nothing</span>) <span style="color: #a71d5d; ">Then</span><br /><span style="color: #a71d5d; ">If</span> (de.Value.<span style="color: #a71d5d; ">GetType</span> <span style="color: #0086b3; ">Is</span> <span style="color: #a71d5d; ">GetType</span>(SI.Common.Messages.NvMessageArray)) <span style="color: #a71d5d; ">Then</span><br /><span style="color: #a71d5d; ">Dim</span> values <span style="color: #a71d5d; ">As</span> SI.Common.Messages.NvMessageArray = <span style="color: #a71d5d; ">CType</span>(de.Value,SI.Common.Messages.NvMessageArray)<br /><span style="color: #a71d5d; ">If</span> (values.Count &gt; 0) <span style="color: #a71d5d; ">Then</span><br /><span style="color: #a71d5d; ">Dim</span> valueCount <span style="color: #a71d5d; ">As</span> <span style="color: #a71d5d; ">Integer</span> = values.Count<br /><span style="color: #a71d5d; ">Dim</span> valueEnumerator <span style="color: #a71d5d; ">As</span> System.Collections.IEnumerator = values.GetEnumerator<br /><span style="color: #a71d5d; ">Do</span> <span style="color: #a71d5d; ">While</span> valueEnumerator.MoveNext<br /><span style="color: #a71d5d; ">Dim</span> o <span style="color: #a71d5d; ">As</span> <span style="color: #a71d5d; ">Object</span> = valueEnumerator.Current<br /><span style="color: #a71d5d; ">If</span> (o &lt;&gt; <span style="color: #63a35c; ">Nothing</span>) <span style="color: #a71d5d; ">Then</span><br />sb.Append(o.ToString)<br />valueCount = (valueCount - 1)<br /><span style="color: #a71d5d; ">If</span> (valueCount &gt; 0) <span style="color: #a71d5d; ">Then</span><br />sb.Append(<span style="color: #df5000; ">", "</span>)<br /><span style="color: #a71d5d; ">Else</span><br />sb.Append(<span style="color: #df5000; ">""</span>&amp;<span style="color: #a71d5d; ">Global</span>.Microsoft.VisualBasic.ChrW(13)&amp;<span style="color: #a71d5d; ">Global</span>.Microsoft.VisualBasic.ChrW(10))<br /><span style="color: #a71d5d; ">End</span> <span style="color: #a71d5d; ">If</span><br /><span style="color: #a71d5d; ">End</span> <span style="color: #a71d5d; ">If</span><br />&#160;<br /><span style="color: #a71d5d; ">Loop</span><br /><span style="color: #a71d5d; ">End</span> <span style="color: #a71d5d; ">If</span><br /><span style="color: #a71d5d; ">Else</span><br />sb.Append(de.Value.ToString)<br />sb.Append(<span style="color: #df5000; ">""</span>&amp;<span style="color: #a71d5d; ">Global</span>.Microsoft.VisualBasic.ChrW(13)&amp;<span style="color: #a71d5d; ">Global</span>.Microsoft.VisualBasic.ChrW(10))<br /><span style="color: #a71d5d; ">End</span> <span style="color: #a71d5d; ">If</span><br /><span style="color: #a71d5d; ">End</span> <span style="color: #a71d5d; ">If</span><br />&#160;<br /><span style="color: #a71d5d; ">Loop</span><br /><span style="color: #a71d5d; ">Return</span> sb.ToString<br /><span style="color: #a71d5d; ">End</span> <span style="color: #a71d5d; ">Function</span><br /><span style="color: #a71d5d; ">End</span> <span style="color: #a71d5d; ">Class</span><br /><span style="color: #a71d5d; ">End</span> <span style="color: #a71d5d; ">Namespace</span></code></pre>
                                            </div>
                                        </div>
                                        <h2><a name="_Default_C#_Script"></a>Default C# Script</h2>
                                        <p>The following C# script is configured as a default action. It will either create the <span class="span_3">c:\nveventdata.txt</span> file or append the event data to it.</p>
                                        <div class="codeSnippet">
                                            <div style="mc-code-lang: CSharp;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #63a35c; ">namespace</span> ScriptNamespace<br />{<br /><span style="color: #63a35c; ">using</span> System;<br /><span style="color: #63a35c; ">using</span> System.Collections;<br /><span style="color: #63a35c; ">using</span> System.IO;<br /><span style="color: #63a35c; ">using</span> System.Text;<br /><span style="color: #63a35c; ">using</span> SI.Common.Messages;<br /><span style="color: #63a35c; ">using</span> SI.SIMonitor.ConsoleMessages.Helpers;<br />&#160;<br /><span style="color: #a71d5d; font-weight: bold; ">public</span> <span style="color: #a71d5d; ">class</span> ScriptClass<br />{<br />&#160;<br /><span style="color: #a71d5d; font-weight: bold; ">private</span> EventConsumerHelper helper = <span style="font-weight: bold; ">null</span>;<br />&#160;<br /><span style="color: #969896; "><span style="color: #969896; ">///</span> Required class constructor</span><br /><span style="color: #a71d5d; font-weight: bold; ">public</span> <span style="color: #333333; font-weight: bold; ">ScriptClass</span>(EventConsumerHelper ecHelper)<br />{<br /><span style="font-weight: bold; ">this</span>.helper = ecHelper;<br />}<br />&#160;<br /><span style="color: #969896; ">// Public Read-Only Properties of EventConsumerHelper are as follows:</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public DateTime TimeLogged</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public DateTime TimeLoggedUtc</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string EventSourceType</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string EventSourceName</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string SettingName</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string EventName</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string DN</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string ClassName</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string Perpetrator</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string OriginatingServer</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string OriginatingClient</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string Success</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string Status</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public Hashtable NewAttributes</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public Hashtable OldAttributes</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public Hashtable Operations</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string BlockedEvent</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string EventsCount</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string OriginatingClientProtocol</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string FromHost</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string FromHostIp</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string ToHost</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string ToHostIp</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string LoginType</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string AffectedObjectSid</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string OriginatingServerIp</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string PerpetratorName</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string PerpetratorSid</span><br /><span style="color: #969896; ">//&#160;&#160;&#160;public string EventNameTranslated</span><br /><span style="color: #969896; ">// Enter code in method ScriptMain below:</span><br /><span style="color: #969896; ">//&#160;&#160;new attributes</span><br /><span style="color: #969896; ">//&#160;&#160;old attributes</span><br /><span style="color: #969896; ">//&#160;&#160;operations</span><br /><span style="color: #a71d5d; font-weight: bold; ">public</span> <span style="color: #795da3; ">virtual</span> <span style="color: #a71d5d; ">void</span> <span style="color: #333333; font-weight: bold; ">ScriptMain</span>()<br />{<br />&#160;<br />System.IO.StreamWriter sw = <span style="font-weight: bold; ">null</span>;<br /><span style="color: #0086b3; font-weight: bold; ">try</span><br />{<br />sw = <span style="color: #795da3; font-weight: bold; ">new</span> System.IO.<span style="color: #333333; font-weight: bold; ">StreamWriter</span>(<span style="color: #df5000; ">"c:\\si_eventdata.txt"</span>, <span style="color: #0086b3; font-weight: bold; ">true</span>);<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="color: #df5000; ">"==========================================="</span>);<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"TimeLogged:&#160;&#160;"</span> + helper.TimeLogged.<span style="color: #333333; font-weight: bold; ">ToString</span>()));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"TimeLoggedUtc:&#160;&#160;"</span> + helper.TimeLoggedUtc.<span style="color: #333333; font-weight: bold; ">ToString</span>()));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"EventSourceType: "</span> + helper.EventSourceType));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"EventSourceName: "</span> + helper.EventSourceName));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"SettingName: "</span> + helper.SettingName));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"EventName: "</span> + helper.EventName));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"DN:&#160;&#160;"</span> + helper.DN.<span style="color: #333333; font-weight: bold; ">ToString</span>()));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"ClassName: "</span> + helper.ClassName));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"Perpetrator: "</span> + helper.Perpetrator));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"OriginatingServer: "</span> + helper.OriginatingServer));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"OriginatingClient: "</span> + helper.OriginatingClient));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"Success: "</span> + helper.Success.<span style="color: #333333; font-weight: bold; ">ToString</span>()));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"Status: "</span> + helper.Status));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"BlockedEvent: "</span> + helper.BlockedEvent.<span style="color: #333333; font-weight: bold; ">ToString</span>()));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"EventsCount: "</span> + helper.EventsCount.<span style="color: #333333; font-weight: bold; ">ToString</span>()));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"OriginatingClientProtocol: "</span> + helper.OriginatingClientProtocol));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"FromHost: "</span> + helper.FromHost));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"FromHostIp: "</span> + helper.FromHostIp));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"ToHost: "</span> + helper.ToHost));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"ToHostIp: "</span> + helper.ToHostIp));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"LoginType: "</span> + helper.LoginType.<span style="color: #333333; font-weight: bold; ">ToString</span>()));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"AffectedObjectSid: "</span> + helper.AffectedObjectSid));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"OriginatingServerIp: "</span> + helper.OriginatingServerIp));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"PerpetratorName: "</span> + helper.PerpetratorName));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"PerpetratorSid: "</span> + helper.PerpetratorSid));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>((<span style="color: #df5000; ">"EventNameTranslated: "</span> + helper.EventNameTranslated));<br />&#160;<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="color: #df5000; ">""</span>);<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="color: #df5000; ">"New Attributes:"</span>);<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="color: #df5000; ">"--------------"</span>);<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="font-weight: bold; ">this</span>.<span style="color: #333333; font-weight: bold; ">GetAttributes</span>(helper.NewAttributes));<br />&#160;<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="color: #df5000; ">""</span>);<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="color: #df5000; ">"Old Attributes:"</span>);<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="color: #df5000; ">"--------------"</span>);<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="font-weight: bold; ">this</span>.<span style="color: #333333; font-weight: bold; ">GetAttributes</span>(helper.OldAttributes));<br />&#160;<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="color: #df5000; ">""</span>);<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="color: #df5000; ">"Operations:"</span>);<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="color: #df5000; ">"--------------"</span>);<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="font-weight: bold; ">this</span>.<span style="color: #333333; font-weight: bold; ">GetAttributes</span>(helper.Operations));<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="color: #df5000; ">"==========================================="</span>);<br />sw.<span style="color: #333333; font-weight: bold; ">WriteLine</span>(<span style="color: #df5000; ">""</span>);<br />sw.<span style="color: #333333; font-weight: bold; ">Flush</span>();<br />}<br /><span style="color: #0086b3; font-weight: bold; ">catch</span> (System.Exception e)<br />{<br />}<br /><span style="color: #0086b3; font-weight: bold; ">finally</span><br />{<br />sw.<span style="color: #333333; font-weight: bold; ">Close</span>();<br />}<br />}<br />&#160;<br /><span style="color: #a71d5d; font-weight: bold; ">private</span> <span style="color: #a71d5d; ">string</span> <span style="color: #333333; font-weight: bold; ">GetAttributes</span>(System.Collections.Hashtable attributes)<br />{<br />System.Text.StringBuilder sb = <span style="color: #795da3; font-weight: bold; ">new</span> System.Text.<span style="color: #333333; font-weight: bold; ">StringBuilder</span>();<br />System.Collections.IEnumerator enumerator = attributes.<span style="color: #333333; font-weight: bold; ">GetEnumerator</span>();<br /><span style="color: #a71d5d; font-weight: bold; ">for</span> (<br />; enumerator.<span style="color: #333333; font-weight: bold; ">MoveNext</span>();&#160;<br />)<br />{<br /><span style="color: #a71d5d; ">string</span> attrName = <span style="font-weight: bold; ">null</span>;<br />System.Collections.DictionaryEntry de = ((System.Collections.DictionaryEntry)(enumerator.Current));<br /><span style="color: #a71d5d; font-weight: bold; ">if</span> ((de.Key != <span style="font-weight: bold; ">null</span>))<br />{<br />attrName = de.Key.<span style="color: #333333; font-weight: bold; ">ToString</span>();<br />}<br /><span style="color: #a71d5d; font-weight: bold; ">else</span><br />{<br />attrName = <span style="color: #df5000; ">""</span>;<br />}<br />sb.<span style="color: #333333; font-weight: bold; ">Append</span>(attrName);<br />sb.<span style="color: #333333; font-weight: bold; ">Append</span>(<span style="color: #df5000; ">": "</span>);<br /><span style="color: #a71d5d; font-weight: bold; ">if</span> ((de.Value != <span style="font-weight: bold; ">null</span>))<br />{<br /><span style="color: #a71d5d; font-weight: bold; ">if</span> ((de.Value.<span style="color: #333333; font-weight: bold; ">GetType</span>() == <span style="color: #795da3; font-weight: bold; ">typeof</span>(SI.Common.Messages.NvMessageArray)))<br />{<br />SI.Common.Messages.NvMessageArray values = ((SI.Common.Messages.NvMessageArray)(de.Value));<br /><span style="color: #a71d5d; font-weight: bold; ">if</span> ((values.Count &gt; <span style="color: #df5000; ">0</span>))<br />{<br /><span style="color: #a71d5d; font-weight: bold; ">int</span> valueCount = values.Count;<br />System.Collections.IEnumerator valueEnumerator = values.<span style="color: #333333; font-weight: bold; ">GetEnumerator</span>();<br /><span style="color: #a71d5d; font-weight: bold; ">for</span> (<br />; valueEnumerator.<span style="color: #333333; font-weight: bold; ">MoveNext</span>();&#160;<br />)<br />{<br /><span style="color: #a71d5d; ">object</span> o = valueEnumerator.Current;<br /><span style="color: #a71d5d; font-weight: bold; ">if</span> ((o != <span style="font-weight: bold; ">null</span>))<br />{<br />sb.<span style="color: #333333; font-weight: bold; ">Append</span>(o.<span style="color: #333333; font-weight: bold; ">ToString</span>());<br />valueCount = (valueCount - <span style="color: #df5000; ">1</span>);<br /><span style="color: #a71d5d; font-weight: bold; ">if</span> ((valueCount &gt; <span style="color: #df5000; ">0</span>))<br />{<br />sb.<span style="color: #333333; font-weight: bold; ">Append</span>(<span style="color: #df5000; ">", "</span>);<br />}<br /><span style="color: #a71d5d; font-weight: bold; ">else</span><br />{<br />sb.<span style="color: #333333; font-weight: bold; ">Append</span>(<span style="color: #df5000; ">"\r\n"</span>);<br />}<br />}<br />}<br />}<br />}<br /><span style="color: #a71d5d; font-weight: bold; ">else</span><br />{<br />sb.<span style="color: #333333; font-weight: bold; ">Append</span>(de.Value.<span style="color: #333333; font-weight: bold; ">ToString</span>());<br />sb.<span style="color: #333333; font-weight: bold; ">Append</span>(<span style="color: #df5000; ">"\r\n"</span>);<br />}<br />}<br />}<br /><span style="color: #a71d5d; ">return</span> sb.<span style="color: #333333; font-weight: bold; ">ToString</span>();<br />}<br />}<br />}</code></pre>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>